<?php
/**
 * Created by PhpStorm.
 * User: Admin
 * Date: 2019/6/21
 * Time: 10:40
 */
namespace app\forum\controller;
use app\forum\model\UserModel;
use think\Controller;
use think\facade\Request;
use think\Db;
use think\facade\Cookie;

class User extends Controller {

	/**
	 * @var $model
	 * 公共模型
	 */
	protected $model;

	/**
	 * 初始化
	 */
	public function initialize()
	{
		parent::initialize(); // TODO: Change the autogenerated stub
		try{
			$this->model = new UserModel();
		}catch (\Exception $e){
			$this->error( $e->getMessage() );
		}
	}

	/**
	 * @return mixed
	 */
	public function model(){
		return $this->model;
	}

	/**
	 * 字母+数字的验证码生成
	 * 自己画的原生版验证码
	 */
	public function checkNum(){
		//1.创建黑色画布
		$image = imagecreatetruecolor(100, 30);
		//2.为画布定义(背景)颜色
		$bgcolor = imagecolorallocate($image, 255, 255, 255);
		//3.填充颜色
		imagefill($image, 0, 0, $bgcolor);
		// 4.设置验证码内容
		//4.1 定义验证码的内容
		$content = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
		//4.1 创建一个变量存储产生的验证码数据，便于用户提交核对
		$captcha = "";
		for ($i = 0; $i <= 4; $i++) {
			// 字体大小
			$fontsize = 10;
			// 字体颜色`
			$fontcolor = imagecolorallocate($image, mt_rand(0, 120), mt_rand(0, 120), mt_rand(0, 120));
			// 设置字体内容
			$fontcontent = substr($content, mt_rand(0, strlen($content)), 1);
			$captcha .= $fontcontent;
			// 显示的坐标
			$x = ($i * 100 / 4) + mt_rand(5, 10);
			$y = mt_rand(5, 10);
			// 填充内容到画布中
			imagestring($image, $fontsize, $x, $y, $fontcontent, $fontcolor);
		}
		//4.3 设置背景干扰元素
		for ($$i = 0; $i < 200; $i++) {
			$pointcolor = imagecolorallocate($image, mt_rand(50, 200), mt_rand(50, 200), mt_rand(50, 200));
			imagesetpixel($image, mt_rand(1, 99), mt_rand(1, 29), $pointcolor);
		}
		//4.4 设置干扰线
		for ($i = 0; $i < 3; $i++) {
			$linecolor = imagecolorallocate($image, mt_rand(50, 200), mt_rand(50, 200), mt_rand(50, 200));
			imageline($image, mt_rand(1, 99), mt_rand(1, 29), mt_rand(1, 99), mt_rand(1, 29), $linecolor);
		}
		//5.向浏览器输出图片头信息
		header('content-type:image/png');
		//6.输出图片到浏览器
		imagepng($image);
		//7.销毁图片
		imagedestroy($image);
	}
	/**
	 * @return false|mixed|string|\think\response\View
	 * 登录
	 */
	public function login(){
		try{
			$this->model = $this->model();
			if(Cookie::get('user')){
				$inPass = 1;
				$name = Cookie::get('user')['username'];
				$pass = Cookie::get('user')['password'];
			}else{
				$inPass = null;
				$name =  null;
				$pass = null;
			}
			if(Request::isPost()){
				$data = input('post.');
				$this->model->login( $data );
			}
			$username = input('get.username');//注册后会带上参数跳到这个页面
			return view('login',[
				'username' => $username,
				'name'  =>  $name,
				'pass'  =>  $pass,
				'inPass'    =>  $inPass
			]);
		}catch (\Exception $e){
			return json_encode( $e->getMessage() ,true);
		}
	}

	/**
	 * @return mixed|\think\response\View
	 * 注册账号
	 */
	public function register(){
		try{
			$str = "0123456789";
			$max = strlen($str) - 1;
			$username = "";
			for ($i = 0; $i < 10; $i++) {
				$username .= $str[mt_rand(0, $max)];
			}
			$user = Db::table('user')->select();
			foreach ($user as $k => $v){
				if($user[$k]['username'] == $username){
					for ($i = 0; $i < 10; $i++) {
						$username .= $str[mt_rand(0, $max)];
					}
				}
			}
			if(Request()->isPost()){
				$data = input('post.');
				$data['date'] = \Date::getNowTime();
				$data['insider'] = '普通用户';
				$data['exp']    =   0;
				$data['target'] = 60;
				$data['lv'] =   0;
				$this->model->register($data);
			}
			return view('register',[
				'username'  =>  $username
			]);
		}catch (\Exception $e){
			return json_decode( $e->getMessage() ,true);
		}
	}

	/**
	 * @return mixed|void
	 * 退出账号
	 */
	public function loginOut(){
		$this->model = $this->model();
		$data = \User::dataInfo();
		$this->model->loginOut( $data );
	}

}