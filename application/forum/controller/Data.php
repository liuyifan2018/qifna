<?php /** @noinspection PhpInconsistentReturnPointsInspection */

/**
 * Created by PhpStorm.
 * User: Admin
 * Date: 2019/7/8
 * Time: 15:06
 * 世间再无白山茶
 */
namespace app\forum\controller;
use app\forum\model\DataModel;
use app\forum\Traits\Date;
use app\forum\Traits\OutMsg;
use think\Controller;
use think\Db;
use think\facade\Request;
use app\forum\Traits\Note;
use app\forum\Traits\CURD;
use app\forum\Traits\User;

class Data extends Controller{

	/**
	 * @var $model
	 * 公共模型
	 */
	protected $model;

	/**
	 * @var $classify
	 * 分类
	 */
	protected $classify;

	/**
	 * @var array
	 */
	protected $map = [];

	/**
	 * @var $param
	 * 接收参数
	 */
	protected $param;

	/**
	 * @var $data
	 * 用户资料
	 */
	protected $data;

	/**
	 * @var $arr
	 * 分类
	 */
	protected $arr;

	public function initialize()
	{
		parent::initialize(); // TODO: Change the autogenerated stub
		try{
			$data = User::dataInfo();
			$this->model = new DataModel($data);
			$this->data = $data;
			$this->param = CURD::PurificationParam();
			$this->map = ['is_show' => 1];
			$this->classify = Note::classify($this->map);
		}catch (\Exception $e){
			$this->error( $e->getMessage() );
		}
	}

	/**
	 * @param $data
	 * @return DataModel
	 * @throws \Exception
	 */
	public function model($data){
		return new DataModel($data);
	}

	/**
	 * @return mixed|\think\response\Json|\think\response\View
	 * @throws \Exception
	 * 个人信息
	 */
	public function index(){
		try{
			$start_time = Date::getNowStartTime();
			$end_time = Date::getNowEndTime();
			$signed = Db::name('forum_signed')
				->where(array('username' => $this->data['username']))
				->whereTime('date','between',array($start_time , $end_time))
				->select();//检测今天是否签到
			$signedUser = Db::name('forum_signed')->where(array('username' => $this->data['username']))->select();
			$signedCount = count($signedUser);
			$signedTime = (end($signedUser));
			return view('index',[
				'title' =>  '用户中心',
				'data'  =>  $this->data,
				'signedCount'  =>  $signedCount,
				'signed'    =>  $signed,
				'signedTime'    =>  $signedTime
			]);
		}catch (\Exception $e){
			$this->error( $e->getMessage() );
		}
	}

	/**
	 * @return mixed|\think\response\Json
	 * @throws \Exception
	 * 签到
	 */
	public function signed(){
		try{
			if (Request::isGet()){
				$msg = input('get.');
				$msg['date'] = Date::getNowTime();
				$start_time = Date::getNowStartTime();
				$end_time = Date::getNowEndTime();
				$Message = $this->model($this->data)->signed($start_time,$end_time,$msg);
				return $Message;
			}
		}catch (\Exception $e){
			return OutMsg::outAbnormalMsg( $e->getMessage() );
		}
	}

	/**
	 * @return \think\response\View
	 * 用户信息
	 */
	public function user(){
		try{
			$user = [];
			if (Request::isGet()){
				$username = input('get.username');
				$user = $this->model($this->data)->user( $username );
				$user == []? []:$user;
			}
			return view('user',[
				'user'  =>  $user,
				'classify' => $this->arr,
				'data'  =>  $this->data
			]);
		}catch (\Exception $e){
			$this->error( $e->getMessage() );
		}
	}

	/**
	 * @return mixed
	 * 选择Tab
	 */
	public function set(){
		try{
			$tion = input('get.tion');
			if(empty($tion)) $tion = 1;
			return view('set',[
				'title' =>  '基本设置',
				'classify'   =>  $this->arr,
				'data'  =>  $this->data,
				'tion'  =>  $tion
			]);
		}catch (\Exception $e){
			$this->error( $e->getMessage() );
		}
	}

	/**
	 * @return mixed|\think\response\Json
	 * @throws \Exception
	 * 更新个人资料
	 */
	public function editUser(){
		try{
			if (Request::isPost()){
				$data = $this->param;
				$Message = $this->model($this->data)->editUser($data);
				return $Message;
			}
		}catch (\Exception $e){
			return OutMsg::outAbnormalMsg( $e->getMessage() );
		}
	}

	/**
	 * 上传图片
	 */
	public function upImage(){
		try{
			if (Request()->isPost()){
				$uid = input('post.uid',0,'intval');
				$file = request()->file('image');
				if( empty( $file) ) throw new \Exception('没有上传图片!');
				$info = $file->move( '../uploads'); //移至到框架应用根目录uploads/目录下
				if($info){
					$this->model($this->data)->upImage($uid,$info->getSaveName());
				}else{
					$this->error($file->getError());
				}
			}
		}catch (\Exception $e){
			$this->error( $e->getMessage() );
		}
	}

	/**
	 * @return mixed|\think\response\Json
	 * @throws \Exception
	 */
	public function updatePass(){
		try{
			if (Request::isPost()){
				$data = $this->param;
				$Message = $this->model($this->data)->updatePass( $data );
				return $Message;
			}
		}catch (\Exception $e){
			return OutMsg::outAbnormalMsg( $e->getMessage() );
		}
	}

	/**
	 * @return \think\response\View
	 * 我的帖子
	 */
	public function note(){
		try{
			$note = "";
			if (Request::isGet()){
				$note = $this->model($this->data)->note();
			}
			return view('note',[
				'note'  =>  $note,
				'title' =>  '我的帖子',
				'data'  =>  $this->data,
				'classify'  => $this->classify
			]);
		}catch (\Exception $e){
			$this->error( $e->getMessage() );
		}
	}

	/**
	 * @return mixed|\think\response\Json
	 * @throws \Exception
	 * 是否显示
	 */
	public function is_show(){
		try{
			if (Request::isGet()){
				$data = input('get.');
				$Message = $this->model($this->data)->is_show($data);
				return $Message;
			}
		}catch (\Exception $e){
			return OutMsg::outAbnormalMsg($e->getMessage());
		}
	}

	/**
	 * @return mixed|\think\response\View|void
	 * 充值余额
	 */
	public function recharge(){
		try{
			if (Request::isPost()){
				$data = $this->param;
				$Message = $this->model($this->data)->recharge($data);
				return $Message;
			}
			return view('recharge',[
				'title' => '充值中心',
				'classify'   => $this->classify,
				'data'  =>  $this->data
			]);
		}catch (\Exception $e){
			$this->error( $e->getMessage() );
		}
	}

	/**
	 * @return mixed|\think\response\Json|void
	 * @throws \Exception
	 * 开通会员
	 */
	public function insider(){
		try{
			if (Request::isPost()){
				$data = $this->param;
				$Message = $this->model($this->data)->insider($data);
				return $Message;
			}
		}catch (\Exception $e){
			return OutMsg::outAbnormalMsg( $e->getMessage() );
		}
	}
}