<?php

namespace app\admin\controller;

use app\admin\common\Param;
use app\admin\service\LoginException;
use app\admin\traits\OutPut;
use app\admin\traits\User as UserTrait;
use app\admin\service\User as UserService;
use think\Controller;
use think\Exception;
use think\facade\Cache;
use think\facade\Cookie;
use think\facade\Request;
use think\facade\Url;
/**
 * Class User
 * @package app\admin\controller
 */
class User extends Controller{

	use OutPut;

	/**
	 * 接收参数
	 * @var @param
	 */
	protected $fetch;

	/**
	 * 跳转路径
	 * @var $url
	 */
	protected $url;

	public function initialize(){
		parent::initialize(); // TODO: Change the autogenerated stub
		$this->fetch = Param::PurificationPostFetchParam();
		$this->url = Url::build('Index/index');
	}

	/**
	 * 登录
	 * @return \think\response\Json|\think\response\View|void
	 * @throws Exception
	 * @throws \think\db\exception\DataNotFoundException
	 * @throws \think\db\exception\ModelNotFoundException
	 * @throws \think\exception\DbException
	 * @author liuyifan
	 * @createTime 2019/9/6 10:35
	 */
	public function login(){
		if (UserTrait::isLogin()) $this->redirect($this->url);

		if (Request::isPost()) {
			try {
				UserService::login($this->fetch);
			} catch (LoginException $e) {
				return $this->outPutError($e->getMessage());
			}
			return $this->outPutSuccess($this->url);
		}
		return view('login', ['title' => '登录']);
	}

	/**
	 * 更新用户信息
	 * @return \think\response\Json|\think\response\View|void
	 * @throws \think\db\exception\DataNotFoundException
	 * @throws \think\db\exception\ModelNotFoundException
	 * @throws \think\exception\DbException
	 * @author liuyifan
	 * @createTime 2019/9/10 9:55
	 */
	public function userInfo(){
		if (Request::isPost()){
			try{
				UserService::updateUser($this->fetch);
			}catch (\Exception $e){
				return $this->outPutError($e->getMessage());
			}
			return $this->outPutSuccess('更新成功!');
		}
		return view('userInfo',[
			'userInfo'	=>  UserTrait::userInfo()
		]);
	}

	/**
	 * 退出登录
	 * @author liuyifan
	 * @createTime 2019/9/10 10:01
	 */
	public function loginOut(){
		Cookie::delete('uid');
		Cache::clear('userInfo');
		$this->redirect('User/login');
	}


}